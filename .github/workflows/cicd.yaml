name: "TheCleanArch CI/CD"

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]"
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    # outputs:
    #   is_released_version: ${{ steps.step_version.is_released_version }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: Restore
        run: |
          dotnet tool restore
          dotnet restore ./TheCleanArch.sln

      - name: Determine Version
        id: step_version
        run: |
          build_meta_data=$(dotnet gitversion /output json /showvariable BuildMetaData)
          if [ "$build_meta_data" == "" ]; then
            echo "is_released_version=1" >> "$GITHUB_OUTPUT"
          else
            version_prefix=$(dotnet gitversion /output json /showvariable NuGetVersionV2)
            version_metadata=$(dotnet gitversion /output json /showvariable BuildMetaDataPadded)
            version_sha=$(dotnet gitversion /output json /showvariable ShortSha)
            echo "version_prefix=$version_prefix"
            echo "version_metadata=$version_metadata"
            echo "version_sha=$version_sha"
            echo "GITHUB_OUTPUT=$GITHUB_OUTPUT"
            echo "is_released_version=0" >> "$GITHUB_OUTPUT"
            echo "version_prefix=$version_prefix" >> "$GITHUB_OUTPUT"
            echo "version_suffix=preview$version_metadata.sha-$version_sha" >> "$GITHUB_OUTPUT"
            cat "$GITHUB_OUTPUT"
          fi

      - name: Build
        run: dotnet build ./TheCleanArch.sln -c Release --no-restore

      - name: Test
        run: dotnet test ./TheCleanArch.sln -c Release --no-build

      - name: Publish Preview
        if: ${{ steps.step_version.is_released_version == '0' }}
        env:
          VERSION_PREFIX: ${{ steps.step_version.version_prefix }}
          VERSION_SUFFIX: ${{ steps.step_version.version_suffix }}
        run: |
          env
          dotnet pack -c Release /p:VersionPrefix="$VERSION_PREFIX" /p:VersionSuffix="$VERSION_SUFFIX"  --output ./artifact
          ls -lha ./artifacts

      - name: Publish Release
        if: ${{ steps.step_version.is_released_version == '1' }}
        run: echo "Publish release packages"
      
