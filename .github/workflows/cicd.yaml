name: "TheCleanArch CI/CD"

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]"
    branches: [main]

env:
  GITHUB_NUGET_SOURCE: https://nuget.pkg.github.com/Hibex-Solutions/index.json

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: Restore
        run: |
          dotnet tool restore
          dotnet restore ./TheCleanArch.sln

      - name: Set up version
        id: step_version
        run: |
          build_meta_data=$(dotnet gitversion /output json /showvariable BuildMetaData)
          if [ "$build_meta_data" == "" ]; then
            echo "is_released_version=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_released_version=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build
        run: dotnet build ./TheCleanArch.sln -c Release --no-restore

      - name: Test
        run: dotnet test ./TheCleanArch.sln -c Release --no-build

      - name: Publish preview packages
        if: ${{ steps.step_version.is_released_version == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version_prefix=$(dotnet gitversion /output json /showvariable NuGetVersionV2)
          version_metadata=$(dotnet gitversion /output json /showvariable BuildMetaDataPadded)
          version_sha=$(dotnet gitversion /output json /showvariable ShortSha)
          version_suffix="preview$version_metadata.sha-$version_sha"
          
          dotnet pack -c Release /p:VersionPrefix="$version_prefix" /p:VersionSuffix="$version_suffix"  --output ./artifacts
          
          dotnet nuget push ./artifacts/TheCleanArch.*.nupkg --source "$GITHUB_NUGET_SOURCE"  --api-key "${GITHUB_TOKEN}"

      - name: Release packages
        if: ${{ steps.step_version.is_released_version == 'true' }}
        run: echo "Publish release packages"
      
